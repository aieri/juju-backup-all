[tox]
envlist = functional
skipsdist=True

[flake8]
exclude =
    .git,
    __pycache__,
    .tox,
    venv,
    .build,
    *.egg_info,
    *.egg
max-line-length = 120
max-complexity = 10
# TODO: Remove D10X when docstrings implemented
ignore = C901,D103,D100,D101,D102,D107,D104

[testenv]
basepython = python3

[lintbase]
deps =
    flake8
    flake8-colors
    flake8-docstrings
    flake8-html

[blackbase]
deps =
    black

[testenv:functional]
passenv =
    PYTEST_KEEP_MODELS
    PYTEST_MYSQL_MODEL
    PYTEST_PERCONA_MODEL
    PYTEST_SELECT_TESTS
    JUJU_DATA
usedevelop=true
commands = pytest -s \
            -k {env:PYTEST_SELECT_TESTS:test} \
            --ignore {toxinidir}/tests/unit \
            --html=report/functional/index.html \
            --junitxml=report/functional.junit.xml
deps =
    -r{toxinidir}/tests/functional/requirements.txt
    -r{toxinidir}/requirements.txt

[testenv:unit]
commands = coverage run -m unittest discover tests/unit
           coverage report -m --include jujubackupall/*.py
deps =
    -r{toxinidir}/tests/unit/requirements.txt
    -r{toxinidir}/requirements.txt

[testenv:htmlreport]
commands = coverage html --include=jujubackupall/*
deps =
    -r{toxinidir}/tests/unit/requirements.txt

[testenv:lintreport]
commands = flake8 jujubackupall --format=html --htmldir=lint --tee
deps = {[lintbase]deps}

[testenv:lint]
commands = flake8 jujubackupall
deps =
    {[lintbase]deps}

[testenv:lintjunit]
commands = flake8 jujubackupall --format junit-xml --output-file=lint/junit.xml
deps =
    {[lintbase]deps}

[testenv:blackcheck]
deps =
    {[blackbase]deps}
commands =
    black --check --diff --line-length 120 jujubackupall

[testenv:black]
deps =
    {[blackbase]deps}
commands =
    black --line-length 120 jujubackupall

[testenv:isort]
deps =
    isort
commands =
    isort --profile black jujubackupall
